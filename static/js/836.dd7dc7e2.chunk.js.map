{"version":3,"file":"static/js/836.dd7dc7e2.chunk.js","mappings":"uSAGaA,GAAiBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mHAOdE,GAAkBF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,wNAYfI,EAAgBJ,EAAAA,EAAAA,MAAH,6GAQbK,EAAuBL,EAAAA,EAAAA,OAAH,wNAYpBM,EAAQN,EAAAA,EAAAA,IAAH,4HAQLO,GAAaP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,gJ,SCjCjBS,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaI,MAAM,sBAC1BC,SAAUL,EAAAA,KAAaM,IAAI,GAAGH,SAAS,0BAG5BI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WAER,OADAL,GAASM,EAAAA,EAAAA,IAAoBJ,IACtB,WACLF,GAASM,EAAAA,EAAAA,IAAoB,MAC9B,CACF,IAUD,OACE,iCACE,SAAC,KAAD,CACEC,cAAe,CAAEb,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDW,SAZe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BV,GAASW,EAAAA,EAAAA,IAASF,IAEJ,OAAVP,GACFQ,GAEH,EAOKE,iBAAkBrB,EAHpB,UAKE,UAACV,EAAD,YACE,SAACK,EAAD,wBACA,SAACF,EAAD,CAAiB6B,KAAK,OAAOnB,KAAK,OAAOoB,YAAY,gBACrD,SAACzB,EAAD,CAAYK,KAAK,OAAOqB,UAAU,SAElC,SAAC7B,EAAD,qBACA,SAACF,EAAD,CACE6B,KAAK,QACLnB,KAAK,QACLoB,YAAY,iBAEd,SAACzB,EAAD,CAAYK,KAAK,QAAQqB,UAAU,SAEnC,SAAC7B,EAAD,wBACA,SAACF,EAAD,CACE6B,KAAK,WACLnB,KAAK,WACLoB,YAAY,oBAEd,SAACzB,EAAD,CAAYK,KAAK,WAAWqB,UAAU,SAEtC,SAAC5B,EAAD,CAAsB0B,KAAK,SAA3B,2BAGHX,IACC,SAACd,EAAD,+EAMP,EC9Ec,SAAS4B,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAClB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormRegisterEl = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 100px;\n`;\n\nexport const InputRegisterEl = styled(Field)`\n  font-size: 16px;\n  width: 300px;\n  height: 30px;\n  margin-bottom: 15px;\n  padding: 5px;\n  border-radius: 5px;\n  outline-color: #5edcb0;\n  border-color: #0aab7e;\n  font-weight: 700;\n`;\n\nexport const RegisterLabel = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 5px;\n\n  color: #057858;\n`;\n\nexport const SubmitRegisterButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #39bb96;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: pointer;\n  outline-color: #504e4e;\n`;\n\nexport const Error = styled.div`\n  text-align: center;\n  color: red;\n  margin-top: 15px;\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const InputError = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n  margin-bottom: 15px;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { selectRegisterError } from 'redux/auth/selectors';\nimport { updateErrorRegister } from 'redux/auth/authSlice';\nimport { useEffect } from 'react';\n\nimport {\n  FormRegisterEl,\n  InputRegisterEl,\n  RegisterLabel,\n  SubmitRegisterButton,\n  Error,\n  InputError,\n} from 'components/RegisterForm/RegisterForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email('Not a proper email'),\n  password: yup.string().min(6).required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const error = useSelector(selectRegisterError);\n\n  useEffect(() => {\n    dispatch(updateErrorRegister(error));\n    return () => {\n      dispatch(updateErrorRegister(null));\n    };\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n\n    if (error !== null) {\n      resetForm();\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormRegisterEl>\n          <RegisterLabel>Username</RegisterLabel>\n          <InputRegisterEl type=\"text\" name=\"name\" placeholder=\"Enter name\" />\n          <InputError name=\"name\" component=\"div\" />\n\n          <RegisterLabel>Email</RegisterLabel>\n          <InputRegisterEl\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n          />\n          <InputError name=\"email\" component=\"div\" />\n\n          <RegisterLabel>Password</RegisterLabel>\n          <InputRegisterEl\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n          />\n          <InputError name=\"password\" component=\"div\" />\n\n          <SubmitRegisterButton type=\"submit\">Register</SubmitRegisterButton>\n        </FormRegisterEl>\n      </Formik>\n      {error && (\n        <Error>\n          Your data isn`t valid. Please, check correctness and try again\n        </Error>\n      )}\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["FormRegisterEl","styled","Form","InputRegisterEl","Field","RegisterLabel","SubmitRegisterButton","Error","InputError","ErrorMessage","schema","yup","shape","name","required","email","password","min","RegisterForm","dispatch","useDispatch","error","useSelector","selectRegisterError","useEffect","updateErrorRegister","initialValues","onSubmit","values","resetForm","register","validationSchema","type","placeholder","component","Register","Helmet"],"sourceRoot":""}